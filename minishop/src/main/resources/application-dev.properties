spring.devtools.restart.enabled=true

server.port=8080
server.compression.enabled=true
server.context-path=/
server.tomcat.uri-encoding=UTF-8

multipart.enabled=true
multipart.file-size-threshold=0
multipart.max-file-size=10Mb
multipart.max-request-size=11Mb

#token configure
minishop.token.maxCount=50000
minishop.token.maxActive=3600
minishop.token.mock=true

# 主数据源，默认的
spring.business.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.business.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.business.datasource.url=jdbc:mysql://localhost:3306/minishop_test?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&verifyServerCertificate=false
spring.business.datasource.username=root
spring.business.datasource.password=whzLONG501
# 初始化大小，最小，最大
spring.business.datasource.initialSize=5
spring.business.datasource.minIdle=5
spring.business.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.business.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.business.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.business.datasource.minEvictableIdleTimeMillis=300000
spring.business.datasource.validationQuery=SELECT 'x'
spring.business.datasource.testWhileIdle=true
spring.business.datasource.testOnBorrow=false
spring.business.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.business.datasource.poolPreparedStatements=true
spring.business.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.business.datasource.filters=stat,wall,slf4j




# Log数据源，默认的
spring.logger.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.logger.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.logger.datasource.url=jdbc:mysql://localhost:3306/minishop_test?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&verifyServerCertificate=false
spring.logger.datasource.username=root
spring.logger.datasource.password=whzLONG501
# 初始化大小，最小，最大
spring.logger.datasource.initialSize=5
spring.logger.datasource.minIdle=5
spring.logger.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.logger.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.logger.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.logger.datasource.minEvictableIdleTimeMillis=300000
spring.logger.datasource.validationQuery=SELECT 'x'
spring.logger.datasource.testWhileIdle=true
spring.logger.datasource.testOnBorrow=false
spring.logger.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.logger.datasource.poolPreparedStatements=true
spring.logger.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.logger.datasource.filters=stat,wall,slf4j


#spring.business.datasource.username=root
#spring.business.datasource.password=whzLONG501
#spring.business.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.business.datasource.url=jdbc:mysql://localhost:3306/minishop_test?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&verifyServerCertificate=false
#spring.business.datasource.max-active=50
#spring.business.datasource.max-idle=15
#spring.business.datasource.max-wait=30000
#spring.business.datasource.test-while-idle=true
#spring.business.datasource.time-between-eviction-runs-millis=600000
#spring.business.datasource.test-on-borrow=true
#spring.business.datasource.validation-query=SELECT 1
#
#spring.logger.datasource.username=root
#spring.logger.datasource.password=whzLONG501
#spring.logger.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.logger.datasource.url=jdbc:mysql://localhost:3306/minishop_test?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&verifyServerCertificate=false
#spring.logger.datasource.max-active=50
#spring.logger.datasource.max-idle=15
#spring.logger.datasource.max-wait=30000
#spring.logger.datasource.test-while-idle=true
#spring.logger.datasource.time-between-eviction-runs-millis=600000
#spring.logger.datasource.test-on-borrow=true
#spring.logger.datasource.validation-query=SELECT 1

#mail configure
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.qq.com
spring.mail.username=153718687@qq.com
spring.mail.password=lbathqmbbaebcbab
spring.mail.protocol=smtp
spring.mail.port=465

spring.mail.properties.mail.host=smtp.qq.com
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.port=465

logging.level.org.springframework.jdbc.core.JdbcTemplate=debug

#商品图片上传位置
web.upload-path=/Users/whzlong/Desktop/Project/mini-shop/minishop/upload/

spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
  classpath:/static/,classpath:/public/,file:${web.upload-path}


minishop.paypal.account=153718687@qq.com
minishop.paypal.accesstoken=access_token$production$ffrq8dc76kkjxz4z$49585247c70e9a960b50e377327fe5c9

minishop.paypal.clientId=AW1gufvaWfULU3it32ayM2ftqLngKE6VWhyPlUpaDLzbB5fo7fjRcYqSh3D3rsl68zKrkWEqro_YLcJf
minishop.paypal.secret=EDmH4KImO7fjtjfTLJ61z58e2itSDrGpX8TCE21bnKmY9hDVdlKr1fFoGmjBziyRRjAz9Gx1BCTl-7rY


minishop.braintree.enviroment=sandbox
minishop.braintree.merchantId=pdmpp3sszchqn7jr
minishop.braintree.publicKey=j3tfpj37qxws2qyb
minishop.braintree.privateKey=51131183410c8f3c01c25370ae1667a0